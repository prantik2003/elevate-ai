{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/actions/interview.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\nconst model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\nexport async function generateQuiz() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n    select: {\n      industry: true,\n      skills: true,\n    },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  const prompt = `\n    Generate 10 technical interview questions for a ${\n      user.industry\n    } professional${\n    user.skills?.length ? ` with expertise in ${user.skills.join(\", \")}` : \"\"\n  }.\n    \n    Each question should be multiple choice with 4 options.\n    \n    Return the response in this JSON format only, no additional text:\n    {\n      \"questions\": [\n        {\n          \"question\": \"string\",\n          \"options\": [\"string\", \"string\", \"string\", \"string\"],\n          \"correctAnswer\": \"string\",\n          \"explanation\": \"string\"\n        }\n      ]\n    }\n  `;\n\n  try {\n    const result = await model.generateContent(prompt);\n    const response = result.response;\n    const text = response.text();\n    const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\n    const quiz = JSON.parse(cleanedText);\n\n    return quiz.questions;\n  } catch (error) {\n    console.error(\"Error generating quiz:\", error);\n    throw new Error(\"Failed to generate quiz questions\");\n  }\n}\n\nexport async function saveQuizResult(questions, answers, score) {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  const questionResults = questions.map((q, index) => ({\n    question: q.question,\n    answer: q.correctAnswer,\n    userAnswer: answers[index],\n    isCorrect: q.correctAnswer === answers[index],\n    explanation: q.explanation,\n  }));\n\n  // Get wrong answers\n  const wrongAnswers = questionResults.filter((q) => !q.isCorrect);\n\n  // Only generate improvement tips if there are wrong answers\n  let improvementTip = null;\n  if (wrongAnswers.length > 0) {\n    const wrongQuestionsText = wrongAnswers\n      .map(\n        (q) =>\n          `Question: \"${q.question}\"\\nCorrect Answer: \"${q.answer}\"\\nUser Answer: \"${q.userAnswer}\"`\n      )\n      .join(\"\\n\\n\");\n\n    const improvementPrompt = `\n      The user got the following ${user.industry} technical interview questions wrong:\n\n      ${wrongQuestionsText}\n\n      Based on these mistakes, provide a concise, specific improvement tip.\n      Focus on the knowledge gaps revealed by these wrong answers.\n      Keep the response under 2 sentences and make it encouraging.\n      Don't explicitly mention the mistakes, instead focus on what to learn/practice.\n    `;\n\n    try {\n      const tipResult = await model.generateContent(improvementPrompt);\n\n      improvementTip = tipResult.response.text().trim();\n      console.log(improvementTip);\n    } catch (error) {\n      console.error(\"Error generating improvement tip:\", error);\n      // Continue without improvement tip if generation fails\n    }\n  }\n\n  try {\n    const assessment = await db.assessment.create({\n      data: {\n        userId: user.id,\n        quizScore: score,\n        questions: questionResults,\n        category: \"Technical\",\n        improvementTip,\n      },\n    });\n\n    return assessment;\n  } catch (error) {\n    console.error(\"Error saving quiz result:\", error);\n    throw new Error(\"Failed to save quiz result\");\n  }\n}\n\nexport async function getAssessments() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  try {\n    const assessments = await db.assessment.findMany({\n      where: {\n        userId: user.id,\n      },\n      orderBy: {\n        createdAt: \"asc\",\n      },\n    });\n\n    return assessments;\n  } catch (error) {\n    console.error(\"Error fetching assessments:\", error);\n    throw new Error(\"Failed to fetch assessments\");\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QACtE,GAAG,KAAK;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/_components/stats-cards.jsx"],"sourcesContent":["import { Brain, Target, Trophy } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nexport default function StatsCards({ assessments }) {\n  const getAverageScore = () => {\n    if (!assessments?.length) return 0;\n    const total = assessments.reduce(\n      (sum, assessment) => sum + assessment.quizScore,\n      0\n    );\n    return (total / assessments.length).toFixed(1);\n  };\n\n  const getLatestAssessment = () => {\n    if (!assessments?.length) return null;\n    return assessments[0];\n  };\n\n  const getTotalQuestions = () => {\n    if (!assessments?.length) return 0;\n    return assessments.reduce(\n      (sum, assessment) => sum + assessment.questions.length,\n      0\n    );\n  };\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-3\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Average Score</CardTitle>\n          <Trophy className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{getAverageScore()}%</div>\n          <p className=\"text-xs text-muted-foreground\">\n            Across all assessments\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Questions Practiced\n          </CardTitle>\n          <Brain className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{getTotalQuestions()}</div>\n          <p className=\"text-xs text-muted-foreground\">Total questions</p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Latest Score</CardTitle>\n          <Target className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">\n            {getLatestAssessment()?.quizScore.toFixed(1) || 0}%\n          </div>\n          <p className=\"text-xs text-muted-foreground\">Most recent quiz</p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;;;;AAEe,SAAS,WAAW,EAAE,WAAW,EAAE;IAChD,MAAM,kBAAkB;QACtB,IAAI,CAAC,aAAa,QAAQ,OAAO;QACjC,MAAM,QAAQ,YAAY,MAAM,CAC9B,CAAC,KAAK,aAAe,MAAM,WAAW,SAAS,EAC/C;QAEF,OAAO,CAAC,QAAQ,YAAY,MAAM,EAAE,OAAO,CAAC;IAC9C;IAEA,MAAM,sBAAsB;QAC1B,IAAI,CAAC,aAAa,QAAQ,OAAO;QACjC,OAAO,WAAW,CAAC,EAAE;IACvB;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,aAAa,QAAQ,OAAO;QACjC,OAAO,YAAY,MAAM,CACvB,CAAC,KAAK,aAAe,MAAM,WAAW,SAAS,CAAC,MAAM,EACtD;IAEJ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC,yHAAA,CAAA,YAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;;;;;;;kCAEpB,8OAAC,yHAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCAAsB;oCAAkB;;;;;;;0CACvD,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAMjD,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC,yHAAA,CAAA,YAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAG3C,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;;;;;;kCAEnB,8OAAC,yHAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAsB;;;;;;0CACrC,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAIjD,8OAAC,yHAAA,CAAA,OAAI;;kCACH,8OAAC,yHAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC,yHAAA,CAAA,YAAS;gCAAC,WAAU;0CAAsB;;;;;;0CAC3C,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;;;;;;;kCAEpB,8OAAC,yHAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;;oCACZ,uBAAuB,UAAU,QAAQ,MAAM;oCAAE;;;;;;;0CAEpD,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;;;;;;;AAKvD","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/_components/performace-chart.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/interview/_components/performace-chart.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/interview/_components/performace-chart.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyT,GACtV,uFACA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/_components/performace-chart.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/interview/_components/performace-chart.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/interview/_components/performace-chart.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/_components/quiz-list.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/interview/_components/quiz-list.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/interview/_components/quiz-list.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkT,GAC/U,gFACA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/_components/quiz-list.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/interview/_components/quiz-list.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/interview/_components/quiz-list.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/interview/page.jsx"],"sourcesContent":["import { getAssessments } from \"@/actions/interview\";\nimport StatsCards from \"./_components/stats-cards\";\nimport PerformanceChart from \"./_components/performace-chart\";\nimport QuizList from \"./_components/quiz-list\";\n\nexport default async function InterviewPrepPage() {\n  const assessments = await getAssessments();\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-5\">\n        <h1 className=\"text-6xl font-bold gradient-title\">\n          Interview Preparation\n        </h1>\n      </div>\n      <div className=\"space-y-6\">\n        <StatsCards assessments={assessments} />\n        <PerformanceChart assessments={assessments} />\n        <QuizList assessments={assessments} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,cAAc,MAAM,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD;IAEvC,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAoC;;;;;;;;;;;0BAIpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,8JAAA,CAAA,UAAU;wBAAC,aAAa;;;;;;kCACzB,8OAAC,mKAAA,CAAA,UAAgB;wBAAC,aAAa;;;;;;kCAC/B,8OAAC,4JAAA,CAAA,UAAQ;wBAAC,aAAa;;;;;;;;;;;;;;;;;;AAI/B","debugId":null}}]
}