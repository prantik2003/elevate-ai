{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/actions/user.js"],"sourcesContent":["// \"use server\";\n\n// import { db } from \"@/lib/prisma\";\n// import { auth } from \"@clerk/nextjs/server\";\n// import { revalidatePath } from \"next/cache\";\n// import { generateAIInsights } from \"./dashboard\";\n\n// export async function updateUser(data) {\n//   const { userId } = await auth();\n//   if (!userId) throw new Error(\"Unauthorized\");\n\n//   const user = await db.user.findUnique({\n//     where: { clerkUserId: userId },\n//   });\n\n//   if (!user) throw new Error(\"User not found\");\n\n//   try {\n//     // Start a transaction to handle both operations\n//     const result = await db.$transaction(\n//       async (tx) => {\n//         // First check if industry exists\n//         let industryInsight = await tx.industryInsight.findUnique({\n//           where: {\n//             industry: data.industry,\n//           },\n//         });\n\n//         // If industry doesn't exist, create it with default values\n//         if (!industryInsight) {\n//           const insights = await generateAIInsights(data.industry);\n\n//           industryInsight = await db.industryInsight.create({\n//             data: {\n//               industry: data.industry,\n//               ...insights,\n//               nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n//             },\n//           });\n//         }\n\n//         // Now update the user\n//         const updatedUser = await tx.user.update({\n//           where: {\n//             id: user.id,\n//           },\n//           data: {\n//             industry: data.industry,\n//             experience: data.experience,\n//             bio: data.bio,\n//             skills: data.skills,\n//           },\n//         });\n\n//         return { updatedUser, industryInsight };\n//       },\n//       {\n//         timeout: 10000, // default: 5000\n//       }\n//     );\n\n//     revalidatePath(\"/\");\n//     return result.user;\n//   } catch (error) {\n//     console.error(\"Error updating user and industry:\", error.message);\n//     throw new Error(\"Failed to update profile\");\n//   }\n// }\n\n// export async function getUserOnboardingStatus() {\n//   const { userId } = await auth();\n//   if (!userId) throw new Error(\"Unauthorized\");\n\n//   const user = await db.user.findUnique({\n//     where: { clerkUserId: userId },\n//   });\n\n//   if (!user) throw new Error(\"User not found\");\n\n//   try {\n//     const user = await db.user.findUnique({\n//       where: {\n//         clerkUserId: userId,\n//       },\n//       select: {\n//         industry: true,\n//       },\n//     });\n\n//     return {\n//       isOnboarded: !!user?.industry,\n//     };\n//   } catch (error) {\n//     console.error(\"Error checking onboarding status:\", error);\n//     throw new Error(\"Failed to check onboarding status\");\n//   }\n// }\n\n\"use server\";\n\nimport { auth } from \"@clerk/nextjs\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { DemandLevel, MarketOutlook } from \"@prisma/client\";\nimport { checkUserExists, createUser, getUserById } from \"@/data/user\";\nimport { updateUserSchema } from \"@/schemas\";\nimport { fetchIndustryInsights } from \"@/lib/api\";\nimport { getUserSubscriptionPlan } from \"@/lib/stripe\";\nimport { createAuditLog } from \"@/lib/create-audit-log\";\nimport db from \"@/lib/prisma\";\n\nexport const onboardUser = async (values) => {\n  const { userId } = auth();\n  if (!userId) return;\n\n  const existingUser = await checkUserExists(userId);\n  if (existingUser) return;\n\n  await createUser(userId, values);\n  revalidatePath(\"/dashboard\");\n  redirect(\"/dashboard\");\n};\n\nexport const updateUser = async (values) => {\n  const { userId } = auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const dbUser = await getUserById(userId);\n  if (!dbUser) throw new Error(\"User not found\");\n\n  const validatedFields = updateUserSchema.safeParse(values);\n  if (!validatedFields.success) throw new Error(\"Invalid fields\");\n\n  const { name, avatar, title, industry } = validatedFields.data;\n\n  try {\n    await db.$transaction(async (tx) => {\n      await tx.user.update({\n        where: { id: dbUser.id },\n        data: {\n          name,\n          avatar,\n          title,\n          industry,\n        },\n      });\n\n      const insights = await fetchIndustryInsights(industry);\n\n      let industryInsight = await tx.industryInsight.findUnique({\n        where: { industry },\n      });\n\n      const demandLevelKey = insights.demandLevel?.toLowerCase();\n      const marketOutlookKey = insights.marketOutlook?.toLowerCase();\n\n      const demandLevelEnum = (() => {\n        switch (demandLevelKey) {\n          case \"high\":\n            return DemandLevel.High;\n          case \"medium\":\n            return DemandLevel.Medium;\n          case \"low\":\n            return DemandLevel.Low;\n          default:\n            return DemandLevel.Medium;\n        }\n      })();\n\n      const marketOutlookEnum = (() => {\n        switch (marketOutlookKey) {\n          case \"positive\":\n            return MarketOutlook.Positive;\n          case \"neutral\":\n            return MarketOutlook.Neutral;\n          case \"negative\":\n            return MarketOutlook.Negative;\n          default:\n            return MarketOutlook.Neutral;\n        }\n      })();\n\n      if (!industryInsight) {\n        industryInsight = await tx.industryInsight.create({\n          data: {\n            industry: data.industry,\n            salaryRanges: insights.salaryRanges,\n            growthRate: insights.growthRate,\n            demandLevel: demandLevelEnum,\n            topSkills: insights.topSkills,\n            marketOutlook: marketOutlookEnum,\n            keyTrends: insights.keyTrends,\n            recommendedSkills: insights.recommendedSkills,\n            nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 1 week later\n          },\n        });\n      }\n\n      await tx.user.update({\n        where: { id: dbUser.id },\n        data: {\n          industryInsightId: industryInsight.id,\n        },\n      });\n\n      await createAuditLog({\n        entityTitle: `${name}'s Profile`,\n        entityId: dbUser.id,\n        entityType: \"USER\",\n        action: \"UPDATE\",\n      });\n    });\n\n    revalidatePath(\"/profile\");\n  } catch (error) {\n    console.error(\"Error updating user and industry:\", error.message);\n    throw new Error(\"Failed to update profile\");\n  }\n};\n\nexport const getUserDetails = async () => {\n  const { userId } = auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const dbUser = await getUserById(userId);\n  if (!dbUser) throw new Error(\"User not found\");\n\n  const subscriptionPlan = await getUserSubscriptionPlan();\n\n  return {\n    ...dbUser,\n    subscriptionPlan,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/data/industries.js"],"sourcesContent":["export const industries = [\n  {\n    id: \"tech\",\n    name: \"Technology\",\n    subIndustries: [\n      \"Software Development\",\n      \"IT Services\",\n      \"Cybersecurity\",\n      \"Cloud Computing\",\n      \"Artificial Intelligence/Machine Learning\",\n      \"Data Science & Analytics\",\n      \"Internet & Web Services\",\n      \"Robotics\",\n      \"Quantum Computing\",\n      \"Blockchain & Cryptocurrency\",\n      \"IoT (Internet of Things)\",\n      \"Virtual/Augmented Reality\",\n      \"Semiconductor & Electronics\",\n    ],\n  },\n  {\n    id: \"finance\",\n    name: \"Financial Services\",\n    subIndustries: [\n      \"Banking\",\n      \"Investment Banking\",\n      \"Insurance\",\n      \"FinTech\",\n      \"Wealth Management\",\n      \"Asset Management\",\n      \"Real Estate Investment\",\n      \"Private Equity\",\n      \"Venture Capital\",\n      \"Cryptocurrency & Digital Assets\",\n      \"Risk Management\",\n      \"Payment Processing\",\n      \"Credit Services\",\n    ],\n  },\n  {\n    id: \"healthcare\",\n    name: \"Healthcare & Life Sciences\",\n    subIndustries: [\n      \"Healthcare Services\",\n      \"Biotechnology\",\n      \"Pharmaceuticals\",\n      \"Medical Devices\",\n      \"Healthcare IT\",\n      \"Telemedicine\",\n      \"Mental Health Services\",\n      \"Genomics\",\n      \"Clinical Research\",\n      \"Healthcare Analytics\",\n      \"Elder Care Services\",\n      \"Veterinary Services\",\n      \"Alternative Medicine\",\n    ],\n  },\n  {\n    id: \"manufacturing\",\n    name: \"Manufacturing & Industrial\",\n    subIndustries: [\n      \"Automotive\",\n      \"Aerospace & Defense\",\n      \"Electronics Manufacturing\",\n      \"Industrial Manufacturing\",\n      \"Chemical Manufacturing\",\n      \"Consumer Goods\",\n      \"Food & Beverage Processing\",\n      \"Textile Manufacturing\",\n      \"Metal Fabrication\",\n      \"3D Printing/Additive Manufacturing\",\n      \"Machinery & Equipment\",\n      \"Packaging\",\n      \"Plastics & Rubber\",\n    ],\n  },\n  {\n    id: \"retail\",\n    name: \"Retail & E-commerce\",\n    subIndustries: [\n      \"E-commerce Platforms\",\n      \"Retail Technology\",\n      \"Fashion & Apparel\",\n      \"Consumer Electronics\",\n      \"Grocery & Food Retail\",\n      \"Luxury Goods\",\n      \"Sports & Recreation\",\n      \"Home & Garden\",\n      \"Beauty & Personal Care\",\n      \"Pet Products\",\n      \"Specialty Retail\",\n      \"Direct-to-Consumer (D2C)\",\n      \"Department Stores\",\n    ],\n  },\n  {\n    id: \"media\",\n    name: \"Media & Entertainment\",\n    subIndustries: [\n      \"Digital Media\",\n      \"Gaming & Esports\",\n      \"Streaming Services\",\n      \"Social Media\",\n      \"Digital Marketing\",\n      \"Film & Television\",\n      \"Music & Audio\",\n      \"Publishing\",\n      \"Advertising\",\n      \"Sports Entertainment\",\n      \"News & Journalism\",\n      \"Animation\",\n      \"Event Management\",\n    ],\n  },\n  {\n    id: \"education\",\n    name: \"Education & Training\",\n    subIndustries: [\n      \"EdTech\",\n      \"Higher Education\",\n      \"Professional Training\",\n      \"Online Learning\",\n      \"K-12 Education\",\n      \"Corporate Training\",\n      \"Language Learning\",\n      \"Special Education\",\n      \"Early Childhood Education\",\n      \"Career Development\",\n      \"Educational Publishing\",\n      \"Educational Consulting\",\n      \"Vocational Training\",\n    ],\n  },\n  {\n    id: \"energy\",\n    name: \"Energy & Utilities\",\n    subIndustries: [\n      \"Renewable Energy\",\n      \"Clean Technology\",\n      \"Oil & Gas\",\n      \"Nuclear Energy\",\n      \"Energy Management\",\n      \"Utilities\",\n      \"Smart Grid Technology\",\n      \"Energy Storage\",\n      \"Carbon Management\",\n      \"Waste Management\",\n      \"Water & Wastewater\",\n      \"Mining\",\n      \"Environmental Services\",\n    ],\n  },\n  {\n    id: \"consulting\",\n    name: \"Professional Services\",\n    subIndustries: [\n      \"Management Consulting\",\n      \"IT Consulting\",\n      \"Strategy Consulting\",\n      \"Digital Transformation\",\n      \"Business Advisory\",\n      \"Legal Services\",\n      \"Accounting & Tax\",\n      \"Human Resources\",\n      \"Marketing Services\",\n      \"Architecture\",\n      \"Engineering Services\",\n      \"Research & Development\",\n      \"Business Process Outsourcing (BPO)\",\n    ],\n  },\n  {\n    id: \"telecom\",\n    name: \"Telecommunications\",\n    subIndustries: [\n      \"Wireless Communications\",\n      \"Network Infrastructure\",\n      \"Telecom Services\",\n      \"5G Technology\",\n      \"Internet Service Providers\",\n      \"Satellite Communications\",\n      \"Data Centers\",\n      \"Fiber Optics\",\n      \"Mobile Technology\",\n      \"VoIP Services\",\n      \"Network Security\",\n      \"Telecom Equipment\",\n      \"Cloud Communications\",\n    ],\n  },\n  {\n    id: \"transportation\",\n    name: \"Transportation & Logistics\",\n    subIndustries: [\n      \"Electric Vehicles\",\n      \"Autonomous Vehicles\",\n      \"Logistics & Supply Chain\",\n      \"Aviation\",\n      \"Railways\",\n      \"Maritime Transport\",\n      \"Urban Mobility\",\n      \"Fleet Management\",\n      \"Last-Mile Delivery\",\n      \"Warehousing\",\n      \"Freight & Cargo\",\n      \"Public Transportation\",\n      \"Space Transportation\",\n    ],\n  },\n  {\n    id: \"agriculture\",\n    name: \"Agriculture & Food\",\n    subIndustries: [\n      \"AgTech\",\n      \"Farming\",\n      \"Food Production\",\n      \"Sustainable Agriculture\",\n      \"Precision Agriculture\",\n      \"Aquaculture\",\n      \"Vertical Farming\",\n      \"Agricultural Biotechnology\",\n      \"Food Processing\",\n      \"Organic Farming\",\n      \"Plant-Based Foods\",\n      \"Agricultural Equipment\",\n      \"Indoor Farming\",\n    ],\n  },\n  {\n    id: \"construction\",\n    name: \"Construction & Real Estate\",\n    subIndustries: [\n      \"Commercial Construction\",\n      \"Residential Construction\",\n      \"Real Estate Development\",\n      \"Property Management\",\n      \"Construction Technology\",\n      \"Building Materials\",\n      \"Infrastructure Development\",\n      \"Smart Buildings\",\n      \"Interior Design\",\n      \"Facilities Management\",\n      \"Real Estate Technology\",\n      \"Sustainable Building\",\n      \"Urban Planning\",\n    ],\n  },\n  {\n    id: \"hospitality\",\n    name: \"Hospitality & Tourism\",\n    subIndustries: [\n      \"Hotels & Resorts\",\n      \"Restaurants & Food Service\",\n      \"Travel Technology\",\n      \"Tourism\",\n      \"Event Planning\",\n      \"Vacation Rentals\",\n      \"Cruise Lines\",\n      \"Catering\",\n      \"Theme Parks\",\n      \"Travel Agencies\",\n      \"Hospitality Management\",\n      \"Online Travel Booking\",\n      \"Cultural Tourism\",\n    ],\n  },\n  {\n    id: \"nonprofit\",\n    name: \"Non-Profit & Social Services\",\n    subIndustries: [\n      \"Charitable Organizations\",\n      \"Social Services\",\n      \"Environmental Conservation\",\n      \"Humanitarian Aid\",\n      \"Education Non-Profits\",\n      \"Healthcare Non-Profits\",\n      \"Arts & Culture\",\n      \"Community Development\",\n      \"International Development\",\n      \"Animal Welfare\",\n      \"Youth Organizations\",\n      \"Social Enterprise\",\n      \"Advocacy Organizations\",\n    ],\n  },\n];\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACxB;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,eAAe;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/onboarding/_components/onboarding-form.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/onboarding/_components/onboarding-form.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/onboarding/_components/onboarding-form.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyT,GACtV,uFACA","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/onboarding/_components/onboarding-form.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/onboarding/_components/onboarding-form.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/onboarding/_components/onboarding-form.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/onboarding/page.jsx"],"sourcesContent":["import { redirect } from \"next/navigation\";\nimport { industries } from \"@/data/industries\";\nimport OnboardingForm from \"./_components/onboarding-form\";\nimport { getUserOnboardingStatus } from \"@/actions/user\";\n\nexport default async function OnboardingPage() {\n  // Check if user is already onboarded\n  const { isOnboarded } = await getUserOnboardingStatus();\n\n  if (isOnboarded) {\n    redirect(\"/dashboard\");\n  }\n\n  return (\n    <main>\n      <OnboardingForm industries={industries} />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,qCAAqC;IACrC,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,+GAAA,CAAA,0BAAuB,AAAD;IAEpD,IAAI,aAAa;QACf,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC;kBACC,cAAA,8OAAC,mKAAA,CAAA,UAAc;YAAC,YAAY,kHAAA,CAAA,aAAU;;;;;;;;;;;AAG5C","debugId":null}}]
}