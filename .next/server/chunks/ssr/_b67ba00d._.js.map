{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/actions/dashboard.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\nconst model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\nexport const generateAIInsights = async (industry) => {\n  const prompt = `\n          Analyze the current state of the ${industry} industry and provide insights in ONLY the following JSON format without any additional notes or explanations:\n          {\n            \"salaryRanges\": [\n              { \"role\": \"string\", \"min\": number, \"max\": number, \"median\": number, \"location\": \"string\" }\n            ],\n            \"growthRate\": number,\n            \"demandLevel\": \"High\" | \"Medium\" | \"Low\",\n            \"topSkills\": [\"skill1\", \"skill2\"],\n            \"marketOutlook\": \"Positive\" | \"Neutral\" | \"Negative\",\n            \"keyTrends\": [\"trend1\", \"trend2\"],\n            \"recommendedSkills\": [\"skill1\", \"skill2\"]\n          }\n          \n          IMPORTANT: Return ONLY the JSON. No additional text, notes, or markdown formatting.\n          Include at least 5 common roles for salary ranges.\n          Growth rate should be a percentage.\n          Include at least 5 skills and trends.\n        `;\n\n  const result = await model.generateContent(prompt);\n  const response = result.response;\n  const text = response.text();\n  const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\n\n  return JSON.parse(cleanedText);\n};\n\nexport async function getIndustryInsights() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n    include: {\n      industryInsight: true,\n    },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  // If no insights exist, generate them\n  if (!user.industryInsight) {\n    const insights = await generateAIInsights(user.industry);\n\n    const industryInsight = await db.industryInsight.create({\n      data: {\n        industry: user.industry,\n        ...insights,\n        nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n      },\n    });\n\n    return industryInsight;\n  }\n\n  return user.industryInsight;\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;;;;;;;AAEA,MAAM,QAAQ,IAAI,8JAAA,CAAA,qBAAkB,CAAC,QAAQ,GAAG,CAAC,cAAc;AAC/D,MAAM,QAAQ,MAAM,kBAAkB,CAAC;IAAE,OAAO;AAAmB;AAE5D,MAAM,uCAAgB,GAAhB,qBAAqB,OAAO;IACvC,MAAM,SAAS,CAAC;2CACyB,EAAE,SAAS;;;;;;;;;;;;;;;;;QAiB9C,CAAC;IAEP,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;IAC3C,MAAM,WAAW,OAAO,QAAQ;IAChC,MAAM,OAAO,SAAS,IAAI;IAC1B,MAAM,cAAc,KAAK,OAAO,CAAC,oBAAoB,IAAI,IAAI;IAE7D,OAAO,KAAK,KAAK,CAAC;AACpB;AAEO,eAAe,uCAAiB,GAAjB;IACpB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAE7B,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,aAAa;QAAO;QAC7B,SAAS;YACP,iBAAiB;QACnB;IACF;IAEA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,sCAAsC;IACtC,IAAI,CAAC,KAAK,eAAe,EAAE;QACzB,MAAM,WAAW,MAAM,mBAAmB,KAAK,QAAQ;QAEvD,MAAM,kBAAkB,MAAM,6GAAA,CAAA,KAAE,CAAC,eAAe,CAAC,MAAM,CAAC;YACtD,MAAM;gBACJ,UAAU,KAAK,QAAQ;gBACvB,GAAG,QAAQ;gBACX,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;YACvD;QACF;QAEA,OAAO;IACT;IAEA,OAAO,KAAK,eAAe;AAC7B;;;IA1Da;IA6BS;;AA7BT,+OAAA;AA6BS,+OAAA","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/actions/user.js"],"sourcesContent":["\"use server\";\n\nimport { db } from \"@/lib/prisma\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\nimport { generateAIInsights } from \"./dashboard\";\n\nexport async function updateUser(data) {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  try {\n    // Start a transaction to handle both operations\n    const result = await db.$transaction(\n      async (tx) => {\n        // First check if industry exists\n        let industryInsight = await tx.industryInsight.findUnique({\n          where: {\n            industry: data.industry,\n          },\n        });\n\n        // If industry doesn't exist, create it with default values\n        if (!industryInsight) {\n          const insights = await generateAIInsights(data.industry);\n\n          industryInsight = await db.industryInsight.create({\n            data: {\n              industry: data.industry,\n              ...insights,\n              nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n            },\n          });\n        }\n\n        // Now update the user\n        const updatedUser = await tx.user.update({\n          where: {\n            id: user.id,\n          },\n          data: {\n            industry: data.industry,\n            experience: data.experience,\n            bio: data.bio,\n            skills: data.skills,\n          },\n        });\n\n        return { updatedUser, industryInsight };\n      },\n      {\n        timeout: 10000, // default: 5000\n      }\n    );\n\n    revalidatePath(\"/\");\n    return result.user;\n  } catch (error) {\n    console.error(\"Error updating user and industry:\", error.message);\n    throw new Error(\"Failed to update profile\");\n  }\n}\n\nexport async function getUserOnboardingStatus() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  try {\n    const user = await db.user.findUnique({\n      where: {\n        clerkUserId: userId,\n      },\n      select: {\n        industry: true,\n      },\n    });\n\n    return {\n      isOnboarded: !!user?.industry,\n    };\n  } catch (error) {\n    console.error(\"Error checking onboarding status:\", error);\n    throw new Error(\"Failed to check onboarding status\");\n  }\n}\n\n// export async function getUserOnboardingStatus() {\n//   const { userId } = await auth();\n//   if (!userId) throw new Error(\"Unauthorized\");\n\n//   try {\n//     console.log(\"Fetching user with ID:\", userId);\n\n//     const user = await db.user.findUnique({\n//       where: { clerkUserId: userId },\n//       select: {\n//         industry: true,\n//       },\n//     });\n\n//     console.log(\"User fetched:\", user);\n\n//     if (!user) throw new Error(\"User not found\");\n\n//     return {\n//       isOnboarded: !!user.industry,\n//     };\n//   } catch (error) {\n//     console.error(\"Error checking onboarding status:\", error);\n//     throw new Error(\"Failed to check onboarding status\");\n//   }\n// }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAEO,eAAe,uCAAQ,GAAR,WAAW,IAAI;IACnC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAE7B,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,aAAa;QAAO;IAC/B;IAEA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,IAAI;QACF,gDAAgD;QAChD,MAAM,SAAS,MAAM,6GAAA,CAAA,KAAE,CAAC,YAAY,CAClC,OAAO;YACL,iCAAiC;YACjC,IAAI,kBAAkB,MAAM,GAAG,eAAe,CAAC,UAAU,CAAC;gBACxD,OAAO;oBACL,UAAU,KAAK,QAAQ;gBACzB;YACF;YAEA,2DAA2D;YAC3D,IAAI,CAAC,iBAAiB;gBACpB,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,qBAAkB,AAAD,EAAE,KAAK,QAAQ;gBAEvD,kBAAkB,MAAM,6GAAA,CAAA,KAAE,CAAC,eAAe,CAAC,MAAM,CAAC;oBAChD,MAAM;wBACJ,UAAU,KAAK,QAAQ;wBACvB,GAAG,QAAQ;wBACX,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;oBACvD;gBACF;YACF;YAEA,sBAAsB;YACtB,MAAM,cAAc,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACvC,OAAO;oBACL,IAAI,KAAK,EAAE;gBACb;gBACA,MAAM;oBACJ,UAAU,KAAK,QAAQ;oBACvB,YAAY,KAAK,UAAU;oBAC3B,KAAK,KAAK,GAAG;oBACb,QAAQ,KAAK,MAAM;gBACrB;YACF;YAEA,OAAO;gBAAE;gBAAa;YAAgB;QACxC,GACA;YACE,SAAS;QACX;QAGF,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC,MAAM,OAAO;QAChE,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,uCAAqB,GAArB;IACpB,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAE7B,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACpC,OAAO;YAAE,aAAa;QAAO;IAC/B;IAEA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,IAAI;QACF,MAAM,OAAO,MAAM,6GAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO;gBACL,aAAa;YACf;YACA,QAAQ;gBACN,UAAU;YACZ;QACF;QAEA,OAAO;YACL,aAAa,CAAC,CAAC,MAAM;QACvB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM,IAAI,MAAM;IAClB;AACF,EAEA,oDAAoD;CACpD,qCAAqC;CACrC,kDAAkD;CAElD,UAAU;CACV,qDAAqD;CAErD,8CAA8C;CAC9C,wCAAwC;CACxC,kBAAkB;CAClB,0BAA0B;CAC1B,WAAW;CACX,UAAU;CAEV,0CAA0C;CAE1C,oDAAoD;CAEpD,eAAe;CACf,sCAAsC;CACtC,SAAS;CACT,sBAAsB;CACtB,iEAAiE;CACjE,4DAA4D;CAC5D,MAAM;CACN,IAAI;;;IApHkB;IA8DA;;AA9DA,+OAAA;AA8DA,+OAAA","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/dashboard/_component/dashboard-view.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/dashboard/_component/dashboard-view.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_component/dashboard-view.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsT,GACnV,oFACA","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/dashboard/_component/dashboard-view.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/dashboard/_component/dashboard-view.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/dashboard/_component/dashboard-view.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Prantik/Desktop/ai-career-coach-master/app/%28main%29/dashboard/page.jsx"],"sourcesContent":["import { getIndustryInsights } from \"@/actions/dashboard\";\nimport DashboardView from \"./_component/dashboard-view\";\nimport { getUserOnboardingStatus } from \"@/actions/user\";\nimport { redirect } from \"next/navigation\";\n\nexport default async function DashboardPage() {\n  const { isOnboarded } = await getUserOnboardingStatus();\n\n  // If not onboarded, redirect to onboarding page\n  // Skip this check if already on the onboarding page\n  if (!isOnboarded) {\n    redirect(\"/onboarding\");\n  }\n\n  const insights = await getIndustryInsights();\n\n  return (\n    <div className=\"container mx-auto\">\n      <DashboardView insights={insights} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;AAEe,eAAe;IAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,+GAAA,CAAA,0BAAuB,AAAD;IAEpD,gDAAgD;IAChD,oDAAoD;IACpD,IAAI,CAAC,aAAa;QAChB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,sBAAmB,AAAD;IAEzC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gKAAA,CAAA,UAAa;YAAC,UAAU;;;;;;;;;;;AAG/B","debugId":null}}]
}